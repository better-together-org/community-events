<script type="text/javascript">

CommunicationsList = (function(Backbone){
    
    var currentMailingId = null;
    
    Mailing = Backbone.DeepModel.extend({
        urlRoot : "<%= baseUri + '/communications/mailing' %>",
        schema : {
            mailing_number          : { type : 'Number', title : '<%= t "mail-mailing-number" %>', help: '<%= t "mail-mailing-number-hint" %>' },
            mail_template_id        : { type : 'Select', title : '<%= t "mail-mailing-template" %>',help: '<%= t "mail-mailing-template-hint" %>',
                                            options : <%= [].concat(MailTemplate.all.to_a.collect {|s| {'val' => s.id, 'label' => s.title} }).to_json.html_safe %>
                                        },
            include_email           : { type : 'Checkbox', title : '<%= t "mail-include-email" %>', help: '<%= t "mail-mailing-include-email-hint" %>', help_placement: 'right' },
            cc_all                  : { type : 'Checkbox', title : '<%= t "mail-cc-all" %>', help: '<%= t "mail-mailing-cc-all-hint" %>', help_placement: 'right' },
            testrun                 : { type : 'Checkbox', title : '<%= t "mail-test-run" %>', help: '<%= t "mail-mailing-test-run-hint" %>', help_placement: 'bottom' }
        },
        defaults : {
            "last_person_idx" : -1
        }
    });
    
    MailingCollection = Backbone.Collection.extend({
        model : Mailing
    });
    
    MailingLayout = Backbone.Marionette.Layout.extend({
        template: "#mailing-list-layout-template",
        
        regions : {
            mailingControlRegion: "#mailing-control-div",
            mailingRegion: "#mailing-region-div",
        },
    });

    var tabLists = [];
    
    function clearDetails() {
        _.invoke(tabLists, 'reset' );
    };
    
    function showMailings(options) {
        mailingLayout = new MailingLayout();
        mailingLayout.render();
        $('#mailing-region-view').html(mailingLayout.el);
        var template = "#mailing-template";
        
        if (options.nops) {
            template = "#mailing-template-nodelete";
        } else {
            TabUtils.createTabControl({
                template                : "#mailing-control-template",
                modelType               : Mailing,
                view_refresh_event      : "mailing:refresh",
                modal_create_title      : '<%= t "comm-create-mailing" %>',
                region                  : mailingLayout.mailingControlRegion,
            });
        }
        
        tabLists.push( AppUtils.createCollectionView({
            url                     : "<%= baseUri + '/communications/mailing.json' %>",
            collectionType          : MailingCollection,
            region                  : mailingLayout.mailingRegion,
            template                : template,
            collection_attributes   : { "class" : "table table-condensed table-hover" },
            collection_tagName      : 'table',
            tagName                 : 'tr',
            view_refresh_event      : "mailing:refresh",
            selectFn                : options.selectFn,
            readTemplate            : options.readTemplate,
            itemArea                : options.itemArea,
            editDisableCondition    : function(mdl) {
                return  mdl.get('scheduled');
            }
        }) );
    };
    
    /*
     * 
     */
    return {
        init : function(options) {
            showMailings(options);
        },
        
        setup : function(app) {
            app.addInitializer(CommunicationsList.init);
        }
    }

})(Backbone);

</script>

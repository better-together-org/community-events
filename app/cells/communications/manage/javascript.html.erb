<script type="text/javascript">

CommunicationsApp = new Backbone.Marionette.Application();

CommunicationsApp.Management = (function(Backbone){
    
    var currentMailingId = null;
    
    ScheduleControlView = Marionette.ItemView.extend({
        template : "#mailing-control-view-template",
        
        initialize : function() {
            this.model.on("change:scheduled", this.render);
        },
        
        events : {
            "click .schedule-mail-button" : "scheduleMailing"
        },
        
        scheduleMailing : function(ev) {
            // alert("Schedule the mailing for " + this.model.id);
            this.model.set('scheduled', true);
            this.model.save();
        }
    });
    
    PreviewControlView = Marionette.ItemView.extend({
        el : '#preview-control-area',
        template : "#preview-control-view-template",
        
        events : {
            "click .preview-mail-button" : "previewMail",
        },
        
        previewMail : function(ev) {
            var selectedIds = jQuery('#mailing-participants').jqGrid('getGridParam','selarrrow'); // get ids of the selected people
            if (selectedIds[0]) {
                var args = { person_id : selectedIds[0],
                             mailing : currentMailingId 
                           };
                
                jQuery.ajax( "<%= baseUri + '/communications/mailing/previewEmail.json' %>",
                         {
                             type : 'GET',
                             data : args,
                             error : function() {
                                alertMessage('<%= t "unable to preview..." %>');
                             },
                             success : function(data, status, jqXHR) {
                                modal = new AppUtils.InfoModal({
                                    content : data.content,
                                    title : '<%= t "comm-mail-preview" %>'
                                });
                                modal.render();
                             }
                         });
            } else {
                alertMessage('<%= t "alert-select-person-to-generate-preview" %>');
            }
        }
    }),
    
    MailingListControlView = Marionette.ItemView.extend({
        el : '#list-control-view',
        template : '#list-control-view-template',
        
        events : {
            "click .add-people-button" : "addPeople",
            "click .remove-people-button" : "removePeople"
        },
        
        addPeople : function(ev) {
            // do nowt if there is no current mailing list
            var selectedIds = jQuery('#participants').jqGrid('getGridParam','selarrrow'); // get ids of the selected people
            var args = { people : selectedIds,
                         mailing : currentMailingId 
                       };
            
            jQuery.ajax( "<%= baseUri + '/communications/mailing/addPeople.json' %>",
                     {
                         type : 'PUT',
                         data : args,
                         error : function() {
                            alertMessage('<%= t "unable-add-to-mailing" %>');
                         },
                         success : function() {
                            // add them to the mailing list
                            jQuery('#participants').jqGrid('resetSelection');
                            // refresh the lists
                            jQuery('#participants').trigger("reloadGrid");
                            jQuery('#mailing-participants').trigger("reloadGrid");
                         }
                     });

        },

        removePeople : function(ev) {
            // do nowt if there is no current mailing list
            var selectedIds = jQuery('#mailing-participants').jqGrid('getGridParam','selarrrow'); // get ids of the selected people
            var args = { people : selectedIds,
                         mailing : currentMailingId 
                       };
            jQuery.ajax( "<%= baseUri + '/communications/mailing/removePeople.json' %>",
                     {
                         type : 'PUT',
                         data : args,
                         error : function() {
                            alertMessage('<%= t "unable-remove-from-mailing" %>');
                         },
                         success : function() {
                            // add them to the mailing list
                            jQuery('#mailing-participants').jqGrid('resetSelection');
                            // refresh the lists
                            jQuery('#participants').trigger("reloadGrid");
                            jQuery('#mailing-participants').trigger("reloadGrid");
                         }
                     });
        }
    });
    
    MailingControlLayout = Backbone.Marionette.Layout.extend({
        template: "#mailing-control-layout-template",
        
        regions: {
            control : "#mailing-control",
          }
    });
    
    var controlRegion = new Backbone.Marionette.Region({
        el: "#mailing-control-area"
    });

    var poller = null; 
    
    function selectMailing(id, mdl) {
        $('#mailing-area').show();

        controlRegion.close();
        mailingCtlLayout = new MailingControlLayout();
        controlRegion.show(mailingCtlLayout);
        mailingCtlLayout.control.show( new ScheduleControlView({
            model : mdl
        }) );

        if (poller) {
            poller.stop();
        };

        // mdl.fetch(); // refresh the underlying model
        poller = Backbone.Poller.get(mdl, {
            delay : 10000, // ms - every 10 seconds...
            // Not delayed so we get a first fetch and then wait 10s
            // delayed : true,
        });

        currentMailingId = id;
        jQuery("#mailing-participants").participantTable('mailingQuery',{
            mailingId : id
        });
        jQuery("#mailing-participants").participantTable('render');

        jQuery("#participants").participantTable('filterPeople', true);
        jQuery("#participants").participantTable('mailingQuery',{
            mailingId : id,
            op : 'not'
        });
        jQuery("#participants").participantTable('render');
        
        if (poller) {
            poller.start();
        };
    };

    function create_people_fiter() {
      $('#toggle-people').change(function(ev) {
        var val = $(this).val();
        jQuery("#participants").participantTable('scheduledPeople', $(ev.target).prop("checked"));
      });
      $('#toggle-other-people').change(function(ev) {
          var val = $(this).val();
          jQuery("#participants").participantTable('filterPeople', !$(ev.target).prop("checked"));
      });
    };
    
    /*
     * 
     */
    return {
        selectMailing : function(id, mdl) {
            selectMailing(id, mdl)
        },
        
        init : function(options) {
            $('#toggle-people').bootstrapToggle({
                on:  '<%= t "yes" %>',
                off: '<%= t "no" %>'
              });
            $('#toggle-other-people').bootstrapToggle({
                on:  '<%= t "yes" %>',
                off: '<%= t "no" %>'
              });

            $('#mailing-area').hide();
            var ctlView = new MailingListControlView();
            ctlView.render();
            var previewCtl = new PreviewControlView();
            previewCtl.render();

            create_people_fiter();
        }
    }
    
})(Backbone);

/*
 * 
 */
jQuery(document).ready(function() {
    CommunicationsList.setup(CommunicationsApp);
    CommunicationsApp.addInitializer(CommunicationsApp.Management.init);
    CommunicationsApp.start({
            selectFn                : CommunicationsApp.Management.selectMailing,
            readTemplate            : '#mailing-data-template',
            itemArea                : "#mailing-edit-area"
    });
});

</script>

xlsx_package.use_shared_strings = true
wb = xlsx_package.workbook
wb.add_worksheet(name: "Program") do |sheet|

    titles = [
        'Datetime',
        'Day',
        'Time',
        'Duration',
        'Room',
        'Venue',
        'Tracks',
        'Format',
        'Title',
        'Description',
        'Short Title',
        'Short Description',
        'Publication Reference Number',
        'Medium Image URL',
        'Large Image URL',
    ]
    
    titles.concat @contexts.collect{|name| name.downcase }

    if @max_people && (@max_people > 0)
        titles.concat Array.new(@max_people) {|e| ['Participant ' + (e+1).to_s,
                                        'Job Title ' + (e+1).to_s, 
                                        'Company ' + (e+1).to_s,
                                        'Role ' + (e+1).to_s
                                    ] }.flatten
    end

    sheet.add_row titles

    @times.each do |time|
        row = [
            time.start + (time.start.utc_offset - Time.zone.now.utc_offset).seconds, # fix for the daylight savings
            time.start.strftime('%A'),
            time.start.strftime('%H:%M'),
            time.programme_items[0].duration,
            time.rooms[0] ? time.rooms[0].name : '',
            time.rooms[0] ? time.rooms[0].venue.name : '',
            time.programme_items[0].themes.collect{|t| t.theme_name.name}.join(","),
            (time.programme_items[0].format ? time.programme_items[0].format.name : ""),
            (time.programme_items[0].title ? strip_html_tags(time.programme_items[0].title.gsub(/\n|\r/,"")) : ""),
            (!time.programme_items[0].precis.blank? ? strip_html_tags(time.programme_items[0].precis.gsub(/\n|\r/,"")) : ""),
            (time.programme_items[0].short_title ? strip_html_tags(time.programme_items[0].short_title.gsub(/\n|\r/,"")) : ""),
            (!time.programme_items[0].short_precis.blank? ? strip_html_tags(time.programme_items[0].short_precis.gsub(/\n|\r/,"")) : ""),
            time.programme_items[0].pub_reference_number,
            '',''
        #    time.programme_items[0].external_images.use('mediumcard')[0] ? time.programme_items[0].external_images.use('mediumcard')[0].picture.url : '',
        #    time.programme_items[0].external_images.use('largecard')[0] ? time.programme_items[0].external_images.use('largecard')[0].picture.url : ''
        ]

        @contexts.each do |ctx|
          tags = time.programme_items[0].
                    taggings.select{|i| i.context == ctx}
          row << tags.collect{|t| t.tag.name}.join(",")
        end

        time.programme_items[0].programme_item_assignments.each do |assignment|
            if assignment.role == PersonItemRole['Participant'] || assignment.role == PersonItemRole['Moderator']
                row <<  assignment.person.getFullPublicationName
                row <<  assignment.person.job_title ? assignment.person.job_title : ''
                row <<  assignment.person.company ? assignment.person.company : ''
                row <<  assignment.role.name
            end
        end

        sheet.add_row row
  
        
        if time.programme_items[0].children
            time.programme_items[0].children.each do |child|
#                render :partial => "program_book_child_item", :locals => {:item => child, :sheet => sheet, :contexts => @contexts}
              row = [
                  '','','',
                  child.duration,
                  '',
                  '',
                  child.themes.collect{|t| t.theme_name.name}.join(","),
                  (child.format ? child.format.name : ""),
                  (child.title ? strip_html_tags(child.title.gsub(/\n|\r/,"")) : ""),
                  (!child.precis.blank? ? strip_html_tags(child.precis.gsub(/\n|\r/,"")) : ""),
                  (child.short_title ? strip_html_tags(child.short_title.gsub(/\n|\r/,"")) : ""),
                  (!child.short_precis.blank? ? strip_html_tags(child.short_precis.gsub(/\n|\r/,"")) : ""),
                  child.pub_reference_number,
                  '',''
              #    child.external_images.use('mediumcard')[0] ? child.external_images.use('mediumcard')[0].picture.url : '',
              #    child.external_images.use('largecard')[0] ? child.external_images.use('largecard')[0].picture.url : ''
              ]

              @contexts.each do |ctx|
                tags = child.taggings.select{|i| i.context == ctx}
                row << tags.collect{|t| t.tag.name}.join(",")
              end

              child.programme_item_assignments.each do |assignment|
                  if assignment.role == PersonItemRole['Participant'] || assignment.role == PersonItemRole['Moderator']
                      row <<  assignment.person.getFullPublicationName
                      row <<  assignment.person.job_title ? assignment.person.job_title : ''
                      row <<  assignment.person.company ? assignment.person.company : ''
                      row <<  assignment.role.name
                  end
              end

              sheet.add_row row


            end
        end

    end
    
end

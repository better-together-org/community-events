<script id="pending-publish-indicator" type="text/javascript">
    PublicationChecker = new Backbone.Marionette.Application();
    PublicationChecker.AppManager = (function(Backbone){
        PendingView = Marionette.ItemView.extend({
            initialize : function() {
                this.model.on("change", this.render);
            }
        });
        PendingBadgeView = PendingView.extend({
            template : "#pending-badge-template"
        });
        PendingLabelView = PendingView.extend({
            template : "#pending-label-template"
        });
        // OverviewLabelView = Marionette.ItemView.extend({
        //     template : "#overview-label-template"
        // });
        PendingCountView = Marionette.ItemView.extend({
            template : "#pending-count-template",
            tagName : 'span'
        });

        PendingCount = Backbone.Model.extend({
            url : "<%= baseUri + '/publisher/pending_count.json' %>",
            defaults : {
                count : 0
            }
        });

        var pendingBadgeRegion = new Backbone.Marionette.Region({
            el: "#nav-pub-count-area"
        });
        var pendingLabelRegion = new Backbone.Marionette.Region({
            el: "#nav-pub-count-label-area"
        });
        // var overviewLabelRegion = new Backbone.Marionette.Region({
        //     el: "#overview-publish-changes-nav-item"
        // });
        var pubCardRegion = new Backbone.Marionette.Region({
            el: "#card-unpublished-count"
        });

        var pendingPoller = null;

        var interval = 30; // default interval

        function getCount() {
            pending = new PendingCount();
            pending.fetch({
                success : function(mdl) {
                    if (pendingPoller) {
                        pendingPoller.stop();
                    };

                    pendingBadge = new PendingBadgeView({
                        model : mdl
                    });
                    pendingLabel = new PendingLabelView({
                        model : mdl
                    });
                    // overviewLabel = new OverviewLabelView({
                    //     model : mdl
                    // });
                    pendingCount = new PendingCountView({
                        model : mdl
                    });

                    pendingBadgeRegion.show(pendingBadge);
                    pendingLabelRegion.show(pendingLabel);
                    // overviewLabelRegion.show(overviewLabel);
                    pubCardRegion.show(pendingCount);

                    pendingPoller = Backbone.Poller.get(mdl, {
                       delay : interval * 1000,
                       delayed : true
                    });

                    if (pendingPoller) {
                        pendingPoller.start();
                    };
                }
            });
        };

        return {
            init : function(interval_secs) {
                interval = interval_secs;
                // If supplied interval is not an integer or is less than 30 seconds, set it to 30 seconds
                if (interval < 30 || !Number.isInteger(interval)) {
                  inverval = 30;
                };

                getCount();
            },
            update : function() {
                getCount();
            }
        }
    })(Backbone);

  
    $(document).ready(function() {
        PublicationChecker.AppManager.init(<%= ENV["PUBLISH_CHECKER_INTERVAL"].present? && ENV["PUBLISH_CHECKER_INTERVAL"].to_i > 30 ? ENV["PUBLISH_CHECKER_INTERVAL"].to_i : 30 %>); // If no env varible set, default to 30 second interval
    });
</script>

<script type="text/template" id="pending-badge-template">
    {{ if(count > 0) { }}
        <span class="badge"><i class="fa fa-refresh" aria-hidden="true"></i>&nbsp;{{=count }}</span>
    {{ } }}
</script>

<script type="text/template" id="pending-label-template">
    {{ if(count > 0) { }}
        <span class="label label-warning publication-count-label"><i class="publication-count-num">{{= count }}</i>&nbsp;&nbsp;<%= t("pending-updates") %></span>
    {{ } }}
</script>

<!-- <script type="text/template" id="overview-label-template">
    {{ if(count > 0) { }}
        <a class="pending-changes-count-badge" href="<%= baseUri %>/pages/publications_dash/online#program_publish_review"><span class="label label-warning publication-count-label"><i class="publication-count-num">{{= count }}</i>&nbsp;&nbsp;<%= t("pending-updates") %></span></a>
    {{ } }}
</script> -->

<script type="text/template" id="pending-count-template">
    {{= count }}
</script>



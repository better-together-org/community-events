xlsx_package.use_shared_strings = true
wb = xlsx_package.workbook

wb.add_worksheet(name: "People") do |sheet|


    titles =     [
        'First Name',
        'Last Name',
        'Suffix',
        'Pub First Name',
        'Pub Last Name',
        'Pub Suffix',
        "Invite Category",
        "Invite Status",
        "Acceptance Status",
        "Email",
        "Job Title",
        "Company Name",
        "Address Line 1",
        "Address Line 2",
        "City",
        "Postal Code",
        "State",
        "Country",
        "Phone - Home",
        "Phone - Mobile",
        "Phone - Work",
        "Phone - Fax",
        "Phone - Other",
        "Registered",
        "Reg Type",
        "Reg Number",
        "Number of Items"
    ]

    sheet.add_row titles

    @people.each do |person|
        row = [
                person.first_name,
                person.last_name,
                person.suffix,
                ((person.pseudonym != nil) && !(person.pseudonym.first_name && person.pseudonym.first_name.empty?) ? person.pseudonym.first_name : ''),
                ((person.pseudonym != nil) && !(person.pseudonym.last_name && person.pseudonym.last_name.empty?) ? person.pseudonym.last_name : ''),
                ((person.pseudonym != nil) && !(person.pseudonym.suffix && person.pseudonym.suffix.empty?) ? person.pseudonym.suffix : ''),
                (person.invitation_category ? person.invitation_category.name : ''),
                (person.invitestatus ? person.invitestatus.name : ''),
                (person.acceptance_status ? person.acceptance_status.name : ''),
                (person.getDefaultEmail ? person.getDefaultEmail.email : ''),
                (person.job_title ? person.job_title : ''),
                (person.company ? person.company : '')
            ]
            
        address = person.getDefaultPostalAddress
            
        if address
            row.concat([
                address.line1,
                address.line2,
                address.city,
                address.postcode,
                address.state,
                address.country
            ])
        else
            row.concat([
                "",
                "",
                "",
                "",
                "",
                ""
            ])
        end
        

        numbers = ["","","","",""]
        phone_numbers = person.phone_numbers
        if phone_numbers
            phone_numbers.each do |pn|
                case pn.phone_type
                    when PhoneTypes['Home']
                        numbers[0] = pn.number
                    when PhoneTypes['Mobile']
                        numbers[1] = pn.number
                    when PhoneTypes['Work']
                        numbers[2] = pn.number
                    when PhoneTypes['Fax']
                        numbers[3] = pn.number
                    when PhoneTypes['Other']
                        numbers[4] = pn.number
                end
            end
        end
        row.concat(numbers)

        reg_details = ['','','']        
        if person.registrationDetail
            reg_details[0] = person.registrationDetail.registered ? 'Y' : 'N'
            reg_details[1] = person.registrationDetail.registration_type if person.registrationDetail.registration_type
            reg_details[2] = person.registrationDetail.registration_number if person.registrationDetail.registration_number
        else
        end
        row.concat reg_details
        
        if person.programmeItemAssignments.size > 0
            row << person.programmeItemAssignments.size.to_s
        end
        
        sheet.add_row row
    end

end
